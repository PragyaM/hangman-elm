var _user$project$Hangman$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Hangman$deductOneLife = function (model) {
	return _elm_lang$core$Native_Utils.update(
		model,
		{livesRemaining: model.livesRemaining - 1});
};
var _user$project$Hangman$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'SubmitGuess') {
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _user$project$Hangman$deductOneLife(model),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Hangman$view = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Welcome to Hangman'),
		_1: {ctor: '[]'}
	});
var _user$project$Hangman$randomWord = 'Hello';
var _user$project$Hangman$Model = F4(
	function (a, b, c, d) {
		return {secretWord: a, livesRemaining: b, guessedLetters: c, obfuscatedWord: d};
	});
var _user$project$Hangman$newGame = function (word) {
	return A4(
		_user$project$Hangman$Model,
		word,
		5,
		{ctor: '[]'},
		'obfuscated word');
};
var _user$project$Hangman$init = _user$project$Hangman$newGame(_user$project$Hangman$randomWord);
var _user$project$Hangman$DeductOneLife = {ctor: 'DeductOneLife'};
var _user$project$Hangman$SubmitGuess = function (a) {
	return {ctor: 'SubmitGuess', _0: a};
};
var _user$project$Hangman$Duplicate = {ctor: 'Duplicate'};
var _user$project$Hangman$Invalid = {ctor: 'Invalid'};
var _user$project$Hangman$Fail = {ctor: 'Fail'};
var _user$project$Hangman$Success = {ctor: 'Success'};
var _user$project$Hangman$isGuessSuccessful = F2(
	function (letter, model) {
		var charLetter = A2(
			_elm_lang$core$Array$get,
			0,
			_elm_lang$core$Array$fromList(
				_elm_lang$core$String$toList(letter)));
		return A2(_elm_lang$core$List$member, charLetter, model.guessedLetters) ? _user$project$Hangman$Duplicate : (A2(_elm_lang$core$String$contains, model.secretWord, letter) ? _user$project$Hangman$Success : _user$project$Hangman$Fail);
	});
